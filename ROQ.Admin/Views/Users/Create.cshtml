@model ROQ.Services.ViewModels.UsersVM

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="content">
    @Html.Hidden("ID", Model.ID)
    <div class="container-fluid">
        <div class="row">
            <div class="col-12">
                <div class="page-title-box">
                    <h4 class="page-title float-left">Create</h4>
                    <button type="button" onclick="location.href='@Url.Action("Index", "Users")'" class="btn btn-warning float-right mt-0" style="margin-bottom: 10px;">Back to list</button>

                </div>
            </div>
            <div class="col-6">
                <div class="card">
                    <div class="card-body">
                        <div class="form-row">
                            <div class="col-12">
                                <div class="p-20">

                                    @using (Html.BeginForm())
                                    {
                                        @Html.AntiForgeryToken()

                                        <div class="form-horizontal">
                                            <h4>User Info</h4>
                                            <hr />
                                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                            <div class="form-row">
                                                <div class="form-group col-md-6">
                                                    @Html.LabelFor(model => model.EmpNo, htmlAttributes: new { @class = "control-label col-md-6" })
                                                    @Html.EditorFor(model => model.EmpNo, new { htmlAttributes = new { @class = "form-control  col-md-4" } })
                                                    @Html.ValidationMessageFor(model => model.EmpNo, "", new { @class = "text-danger" })
                                                </div>
                                                <div class=" form-group col-md-2">
                                                    <div class="form-check">
                                                        <label class="form-check-label">
                                                            @Html.CheckBoxFor(model => model.IsActive, new { @class = "form-check-input" })
                                                            Active
                                                        </label>
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="form-group">
                                                @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label col-md-4" })

                                                @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })

                                            </div>
                                            <div class="form-row">
                                                <div class="form-group col-md-6">
                                                    @Html.LabelFor(model => model.EmailID, htmlAttributes: new { @class = "control-label col-md-4" })
                                                    @Html.EditorFor(model => model.EmailID, new { htmlAttributes = new { @class = "form-control" } })
                                                    @Html.ValidationMessageFor(model => model.EmailID, "", new { @class = "text-danger" })
                                                </div>

                                                <div class="form-group col-md-6">
                                                    @Html.LabelFor(model => model.MobileNo, htmlAttributes: new { @class = "control-label col-md-4" })
                                                    @Html.EditorFor(model => model.MobileNo, new { htmlAttributes = new { @class = "form-control" } })
                                                    @Html.ValidationMessageFor(model => model.MobileNo, "", new { @class = "text-danger" })

                                                </div>
                                            </div>

                                            <div class="form-row">
                                                <div class="form-group col-md-6">
                                                    @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-4" })
                                                    @*@Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control col-md-4" } })*@
                                                    @Html.DropDownListFor(model => model.Gender, ViewBag.Genders as SelectList, new { @class = "form-control" })
                                                    @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                                                </div>
                                                <div class="form-group col-md-6">
                                                    @Html.LabelFor(model => model.BirthDate, htmlAttributes: new { @class = "control-label col-md-4" })
                                                    @Html.EditorFor(model => model.BirthDate, new { htmlAttributes = new { @class = "form-control col-md-4" } })
                                                    @Html.ValidationMessageFor(model => model.BirthDate, "", new { @class = "text-danger" })
                                                </div>
                                            </div>

                                            <div class="form-group">
                                                @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-6" })
                                                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })

                                            </div>

                                            <div class="form-group row">
                                                <div class="col-md-offset-2 col-md-10">
                                                    <input type="button" value="Save" id="btnSave" class="btn btn-primary" />
                                                </div>
                                            </div>
                                        </div>
                                    }

                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
    function isValidEmailAddress(emailAddress) {
        var pattern = new RegExp(/^(("[\w-\s]+")|([\w-]+(?:\.[\w-]+)*)|("[\w-\s]+")([\w-]+(?:\.[\w-]+)*))(@@((?:[\w-]+\.)*\w[\w-]{0,66})\.([a-z]{2,6}(?:\.[a-z]{2})?)$)|(@@\[?((25[0-5]\.|2[0-4][0-9]\.|1[0-9]{2}\.|[0-9]{1,2}\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\]?$)/i);
        return pattern.test(emailAddress);
    }

    $(document).ready(function () {
        //$('input[type=datetime]').datepicker({
        //    dateFormat: "dd/MM/yyyy",
        //    changeMonth: true,
        //    changeYear: true,
        //    yearRange: "-60:+0"
        //}); 
        $("#btnSave").click(function () {

            if ($('#EmpNo').val() == "") {
                alert("Please enter Emp Number");
                $('#EmpNo').focus();
                return false;
            }
            if ($('#FullName').val() == "") {
                alert("Please enter Full Name");
                $('#FullName').focus();
                return false;
            }
            if ($('#EmailID').val() == "" || !isValidEmailAddress($('#EmailID').val())) {
                alert("Please enter valid EmailID");
                $('#EmailID').focus();
                return false;
            }
            if ($('#MobileNo').val() == "") {
                alert("Please enter Mobile number");
                $('#MobileNo').focus();
                return false;
            }
            if ($('#Gender').val() == "") {
                alert("Please select Gender");
                $('#Gender').focus();
                return false;
            }
            if ($('#BirthDate').val() == "") {
                alert("Please enter Birth Date");
                $('#BirthDate').focus();
                return false;
            }
            if ($('#UserName').val() == "") {
                alert("Please select UserName");
                $('#UserName').focus();
                return false;
            }
            formData = new FormData();
            formData.append("ID", $('#ID').val());
            formData.append("EmpNo", $('#EmpNo').val());
            formData.append("FullName", $('#FullName').val());
            formData.append("EmailID", $('#EmailID').val());
            formData.append("MobileNo", $('#MobileNo').val());
            formData.append("Gender", $('#Gender').val());
            formData.append("BirthDate", $('#BirthDate').val());
            formData.append("UserName", $('#UserName').val());
            formData.append("IsActive", $("input[name='IsActive']:checked").val());
            //formData.append("ImageFileName", files[0].name);

            $.ajax({
                type: 'POST',
                url: "/Users/InsertUpdate",
                data: formData,
                cache: false,
                contentType: false,
                processData: false,
                success: function (response) {
                    alert(response.Message);
                    if (response.code > 0) {
                        $('#ID').val(response.code)
                    }
                },
                error: function (xhr, error, status) {
                    alert(error, status);
                }
            })
        })

    });
</script>